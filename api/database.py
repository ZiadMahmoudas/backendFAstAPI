# api/database.py

import os
from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from sqlalchemy.orm import sessionmaker, declarative_base

# ðŸ”´ ØªØ£ÙƒØ¯ Ù…Ù† Ø£Ù† Ù‡Ø°Ø§ Ø§Ù„Ø±Ø§Ø¨Ø· ØµØ­ÙŠØ­ ØªÙ…Ø§Ù…Ù‹Ø§
DATABASE_URL = os.getenv(
    "DATABASE_URL",
)

# ðŸ”´ Ù‡Ø°Ø§ Ù‡Ùˆ Ø§Ù„Ø­Ù„ Ù„Ù…Ø´ÙƒÙ„Ø© sslmode
engine = create_async_engine(
    DATABASE_URL,
    echo=True,
    future=True,
    connect_args={
        "ssl": "require"
    }
)

AsyncSessionLocal = sessionmaker(
    bind=engine, class_=AsyncSession, expire_on_commit=False
)

Base = declarative_base()

# Dependency Ù„Ù„Ù€ DB
async def get_db():
    async with AsyncSessionLocal() as session:
        try:
            yield session
        finally:
            await session.close()